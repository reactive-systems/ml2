# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ml2.grpc.prop import prop_pb2 as ml2_dot_grpc_dot_prop_dot_prop__pb2


class BooleForceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckSat = channel.unary_unary(
                '/BooleForce/CheckSat',
                request_serializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.CNFSatProblem.SerializeToString,
                response_deserializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.CNFSatSolution.FromString,
                )
        self.TraceCheck = channel.unary_unary(
                '/BooleForce/TraceCheck',
                request_serializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProofCheckProblem.SerializeToString,
                response_deserializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProofCheckSolution.FromString,
                )
        self.BinarizeResProof = channel.unary_unary(
                '/BooleForce/BinarizeResProof',
                request_serializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProof.SerializeToString,
                response_deserializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProof.FromString,
                )


class BooleForceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckSat(self, request, context):
        """check satisfiability
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TraceCheck(self, request, context):
        """check resolution proof
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BinarizeResProof(self, request, context):
        """binarize resolution proof
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BooleForceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckSat': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckSat,
                    request_deserializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.CNFSatProblem.FromString,
                    response_serializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.CNFSatSolution.SerializeToString,
            ),
            'TraceCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.TraceCheck,
                    request_deserializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProofCheckProblem.FromString,
                    response_serializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProofCheckSolution.SerializeToString,
            ),
            'BinarizeResProof': grpc.unary_unary_rpc_method_handler(
                    servicer.BinarizeResProof,
                    request_deserializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProof.FromString,
                    response_serializer=ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProof.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BooleForce', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BooleForce(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckSat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BooleForce/CheckSat',
            ml2_dot_grpc_dot_prop_dot_prop__pb2.CNFSatProblem.SerializeToString,
            ml2_dot_grpc_dot_prop_dot_prop__pb2.CNFSatSolution.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TraceCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BooleForce/TraceCheck',
            ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProofCheckProblem.SerializeToString,
            ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProofCheckSolution.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BinarizeResProof(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BooleForce/BinarizeResProof',
            ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProof.SerializeToString,
            ml2_dot_grpc_dot_prop_dot_prop__pb2.ResProof.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
