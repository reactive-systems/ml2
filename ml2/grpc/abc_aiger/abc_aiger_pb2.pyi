"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import ml2.grpc.aiger.aiger_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ConvertBinaryToAasciRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ParametersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    PARAMETERS_FIELD_NUMBER: builtins.int
    AIG_FIELD_NUMBER: builtins.int
    @property
    def parameters(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Defines run- and tool-specific parameters. As Map (Dict in Python).
        Typical examples are threads, timeouts etc. Can be empty.
        """

    @property
    def aig(self) -> ml2.grpc.aiger.aiger_pb2.AigerBinaryCircuit:
        """AIGER circuit in aig (binary) format"""

    def __init__(
        self,
        *,
        parameters: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        aig: ml2.grpc.aiger.aiger_pb2.AigerBinaryCircuit | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["aig", b"aig"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["aig", b"aig", "parameters", b"parameters"]) -> None: ...

global___ConvertBinaryToAasciRequest = ConvertBinaryToAasciRequest

@typing.final
class ConvertBinaryToAasciResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AAG_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TOOL_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    error: builtins.str
    """Here additional information should be supplied if something went wrong"""
    tool: builtins.str
    """Tool that created the response"""
    @property
    def aag(self) -> ml2.grpc.aiger.aiger_pb2.AigerCircuit:
        """AIGER circuit in aag (aasci) format"""

    @property
    def time(self) -> google.protobuf.duration_pb2.Duration:
        """How long the tool took to create the result."""

    def __init__(
        self,
        *,
        aag: ml2.grpc.aiger.aiger_pb2.AigerCircuit | None = ...,
        error: builtins.str = ...,
        tool: builtins.str = ...,
        time: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_aag", b"_aag", "_time", b"_time", "aag", b"aag", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_aag", b"_aag", "_time", b"_time", "aag", b"aag", "error", b"error", "time", b"time", "tool", b"tool"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_aag", b"_aag"]) -> typing.Literal["aag"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_time", b"_time"]) -> typing.Literal["time"] | None: ...

global___ConvertBinaryToAasciResponse = ConvertBinaryToAasciResponse

@typing.final
class ConvertAasciToBinaryRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ParametersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    PARAMETERS_FIELD_NUMBER: builtins.int
    AAG_FIELD_NUMBER: builtins.int
    @property
    def parameters(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Defines run- and tool-specific parameters. As Map (Dict in Python).
        Typical examples are threads, timeouts etc. Can be empty.
        """

    @property
    def aag(self) -> ml2.grpc.aiger.aiger_pb2.AigerCircuit:
        """AIGER circuit in aag (aasci) format"""

    def __init__(
        self,
        *,
        parameters: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        aag: ml2.grpc.aiger.aiger_pb2.AigerCircuit | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["aag", b"aag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["aag", b"aag", "parameters", b"parameters"]) -> None: ...

global___ConvertAasciToBinaryRequest = ConvertAasciToBinaryRequest

@typing.final
class ConvertAasciToBinaryResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AIG_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TOOL_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    error: builtins.str
    """Here additional information should be supplied if something went wrong"""
    tool: builtins.str
    """Tool that created the response"""
    @property
    def aig(self) -> ml2.grpc.aiger.aiger_pb2.AigerBinaryCircuit:
        """AIGER circuit in aig (binary) format"""

    @property
    def time(self) -> google.protobuf.duration_pb2.Duration:
        """How long the tool took to create the result."""

    def __init__(
        self,
        *,
        aig: ml2.grpc.aiger.aiger_pb2.AigerBinaryCircuit | None = ...,
        error: builtins.str = ...,
        tool: builtins.str = ...,
        time: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_aig", b"_aig", "_time", b"_time", "aig", b"aig", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_aig", b"_aig", "_time", b"_time", "aig", b"aig", "error", b"error", "time", b"time", "tool", b"tool"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_aig", b"_aig"]) -> typing.Literal["aig"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_time", b"_time"]) -> typing.Literal["time"] | None: ...

global___ConvertAasciToBinaryResponse = ConvertAasciToBinaryResponse

@typing.final
class ConvertAigerToDotRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ParametersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    PARAMETERS_FIELD_NUMBER: builtins.int
    AAG_FIELD_NUMBER: builtins.int
    @property
    def parameters(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Defines run- and tool-specific parameters. As Map (Dict in Python).
        Typical examples are threads, timeouts etc. Can be empty.
        """

    @property
    def aag(self) -> ml2.grpc.aiger.aiger_pb2.AigerCircuit:
        """An Aiger Circuit in ascii format"""

    def __init__(
        self,
        *,
        parameters: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        aag: ml2.grpc.aiger.aiger_pb2.AigerCircuit | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["aag", b"aag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["aag", b"aag", "parameters", b"parameters"]) -> None: ...

global___ConvertAigerToDotRequest = ConvertAigerToDotRequest

@typing.final
class ConvertAigerToDotResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOT_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TOOL_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    dot: builtins.str
    """AIGER circuit in aig (binary) format"""
    error: builtins.str
    """Here additional information should be supplied if something went wrong"""
    tool: builtins.str
    """Tool that created the response"""
    @property
    def time(self) -> google.protobuf.duration_pb2.Duration:
        """How long the tool took to create the result."""

    def __init__(
        self,
        *,
        dot: builtins.str | None = ...,
        error: builtins.str = ...,
        tool: builtins.str = ...,
        time: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_dot", b"_dot", "_time", b"_time", "dot", b"dot", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_dot", b"_dot", "_time", b"_time", "dot", b"dot", "error", b"error", "time", b"time", "tool", b"tool"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_dot", b"_dot"]) -> typing.Literal["dot"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_time", b"_time"]) -> typing.Literal["time"] | None: ...

global___ConvertAigerToDotResponse = ConvertAigerToDotResponse

@typing.final
class ConvertDotToSvgResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SVG_FIELD_NUMBER: builtins.int
    TOOL_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    svg: builtins.str
    """svg string of the image"""
    tool: builtins.str
    """Tool that created the response"""
    @property
    def time(self) -> google.protobuf.duration_pb2.Duration:
        """How long the tool took to create the result."""

    def __init__(
        self,
        *,
        svg: builtins.str | None = ...,
        tool: builtins.str = ...,
        time: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_svg", b"_svg", "_time", b"_time", "svg", b"svg", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_svg", b"_svg", "_time", b"_time", "svg", b"svg", "time", b"time", "tool", b"tool"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_svg", b"_svg"]) -> typing.Literal["svg"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_time", b"_time"]) -> typing.Literal["time"] | None: ...

global___ConvertDotToSvgResponse = ConvertDotToSvgResponse

@typing.final
class ConvertDotRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOT_FIELD_NUMBER: builtins.int
    dot: builtins.str
    """A dot string"""
    def __init__(
        self,
        *,
        dot: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["dot", b"dot"]) -> None: ...

global___ConvertDotRequest = ConvertDotRequest

@typing.final
class ConvertDotToPngResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PNG_FIELD_NUMBER: builtins.int
    TOOL_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    png: builtins.str
    """base64 encoded png image"""
    tool: builtins.str
    """Tool that created the response"""
    @property
    def time(self) -> google.protobuf.duration_pb2.Duration:
        """How long the tool took to create the result."""

    def __init__(
        self,
        *,
        png: builtins.str | None = ...,
        tool: builtins.str = ...,
        time: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_png", b"_png", "_time", b"_time", "png", b"png", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_png", b"_png", "_time", b"_time", "png", b"png", "time", b"time", "tool", b"tool"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_png", b"_png"]) -> typing.Literal["png"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_time", b"_time"]) -> typing.Literal["time"] | None: ...

global___ConvertDotToPngResponse = ConvertDotToPngResponse

@typing.final
class AigerSimplifyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ParametersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    PARAMETERS_FIELD_NUMBER: builtins.int
    SIMPLIFY_COMMANDS_FIELD_NUMBER: builtins.int
    AAG_FIELD_NUMBER: builtins.int
    @property
    def parameters(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Defines run- and tool-specific parameters. As Map (Dict in Python).
        Typical examples are threads, timeouts etc. Can be empty.
        """

    @property
    def simplify_commands(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of commands to send to ABC that simplify the AIGER circuit
        If empty, the KNOR default commands are used
        """

    @property
    def aag(self) -> ml2.grpc.aiger.aiger_pb2.AigerCircuit:
        """An Aiger Circuit in ascii format"""

    def __init__(
        self,
        *,
        parameters: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        simplify_commands: collections.abc.Iterable[builtins.str] | None = ...,
        aag: ml2.grpc.aiger.aiger_pb2.AigerCircuit | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["aag", b"aag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["aag", b"aag", "parameters", b"parameters", "simplify_commands", b"simplify_commands"]) -> None: ...

global___AigerSimplifyRequest = AigerSimplifyRequest

@typing.final
class AigerSimplifyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AAG_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TOOL_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    error: builtins.str
    """Here additional information should be supplied if something went wrong"""
    tool: builtins.str
    """Tool that created the response"""
    @property
    def aag(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ml2.grpc.aiger.aiger_pb2.AigerCircuit]:
        """AIGER circuit in aag (aasci) format including history, last is most recent"""

    @property
    def time(self) -> google.protobuf.duration_pb2.Duration:
        """How long the tool took to create the result."""

    def __init__(
        self,
        *,
        aag: collections.abc.Iterable[ml2.grpc.aiger.aiger_pb2.AigerCircuit] | None = ...,
        error: builtins.str = ...,
        tool: builtins.str = ...,
        time: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_time", b"_time", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_time", b"_time", "aag", b"aag", "error", b"error", "time", b"time", "tool", b"tool"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_time", b"_time"]) -> typing.Literal["time"] | None: ...

global___AigerSimplifyResponse = AigerSimplifyResponse
