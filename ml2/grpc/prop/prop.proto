syntax = "proto3";

// propositional satisfiability problem
message PropSatProblem {
    string formula = 1;
    float timeout = 2;
}

// solution to a propositional satisfiability problem
message PropSatSolution {
    string status = 1;
    map<string, int32> assignment = 2;
}

// clause (finite disjunction of literals)
message Clause { repeated int32 literals = 1; }

// resolution clause, i.e., a clause with id and possibly ids of premises used
// to resolve the clause
message ResClause {
    int32 id = 1;
    repeated int32 literals = 2;
    repeated int32 premises = 3;
}

// propositional formula in conjunctive normal form
message CNFFormula {
    int32 num_vars = 1;
    int32 num_clauses = 2;
    repeated Clause clauses = 3;
    repeated string comments = 4;
    repeated string symbol_table = 5;
}

// propositional satisfiability problem in conjunctive normal form
message CNFSatProblem {
    CNFFormula formula = 1;
    float timeout = 2;
}

// solution to a propositional satisfiability problem in conjunctive normal form
message CNFSatSolution {
    string status = 1;
    repeated int32 assignment = 2;
    repeated Clause clausal_proof = 3;
    repeated ResClause res_proof = 4;
}

// resolution proof checking problem
// in contrast to the clausal proof checking problem the cnf sat problem is part
// of the proof
message ResProofCheckProblem {
    repeated ResClause proof = 1;
    float timeout = 2;
}

// solution to a resolution proof checking problem
message ResProofCheckSolution { string status = 1; }

// clausal proof checking problem
message ClausalProofCheckProblem {
    CNFFormula formula = 1;
    repeated Clause proof = 2;
    float timeout = 3;
}

// resolution proof
message ResProof {
    repeated ResClause proof = 1;
}
