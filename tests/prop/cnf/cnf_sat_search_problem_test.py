"""CNF SAT search problem test"""

from ml2.prop.cnf.cnf_sat_search_problem import CNFSatSearchProblem

CSV_FIELDS = {
    "formula": "p cnf 10 49\\n3 2 9 0\\n-8 4 -9 -10 2 0\\n-9 -6 0\\n-9 1 10 0\\n6 4 -8 3 0\\n5 -10 2 6 0\\n-3 -1 -8 0\\n-8 -5 -2 9 0\\n3 7 -1 6 4 -8 10 5 9 0\\n-5 -4 2 0\\n-4 8 -6 2 0\\n5 -9 -8 0\\n4 -9 -8 -10 0\\n6 -2 9 0\\n10 -4 1 0\\n6 -5 -7 9 -10 -1 8 4 3 0\\n6 -8 9 10 -5 0\\n4 2 10 -3 0\\n8 6 7 0\\n-4 1 8 0\\n10 9 -1 -2 0\\n-5 -1 3 0\\n5 -8 6 -7 0\\n-6 -1 0\\n10 9 0\\n-8 9 4 0\\n2 -6 8 0\\n7 8 1 0\\n-2 8 10 1 0\\n-8 7 -10 0\\n6 1 -10 7 4 0\\n-10 4 -7 0\\n-8 -7 3 0\\n7 4 3 9 10 -8 2 -1 6 -5 0\\n-9 6 4 8 0\\n2 7 -10 0\\n-3 5 -2 0\\n7 -10 -2 4 0\\n-4 -2 10 -8 0\\n-9 4 -3 -7 1 -8 -5 0\\n-4 6 3 0\\n-6 -7 0\\n10 -1 5 -7 -3 0\\n-1 10 0\\n-1 -3 -10 -7 0\\n2 6 5 -4 0\\n4 -1 -8 6 0\\n-3 2 -5 0\\n-7 -2 -10 0\\n",
    "sat": 0,
    "res_proof": "3 -6 -9 0 0\\n4 10 -9 1 0 0\\n5 -8 4 3 6 0 0\\n6 5 -10 2 6 0 0\\n7 -1 -8 -3 0 0\\n10 -4 -5 2 0 0\\n12 5 -9 -8 0 0\\n13 4 -9 -8 -10 0 0\\n14 -2 9 6 0 0\\n19 7 6 8 0 0\\n20 -4 8 1 0 0\\n24 -1 -6 0 0\\n25 10 9 0 0\\n28 7 8 1 0 0\\n30 7 -10 -8 0 0\\n32 4 -10 -7 0 0\\n33 -8 -7 3 0 0\\n35 4 -9 8 6 0 0\\n41 -4 6 3 0 0\\n42 -6 -7 0 0\\n44 -1 10 0 0\\n45 -1 -10 -3 -7 0 0\\n48 2 -5 -3 0 0\\n49 -2 -10 -7 0 0\\n51 -6 7 0 30 28 25 24 3 0\\n52 7 3 0 5 41 19 51 0\\n53 3 0 25 32 52 41 42 35 33 0\\n54 -1 -8 0 7 53 0\\n59 -10 -1 -7 0 45 53 0\\n60 -5 2 0 48 53 0\\n61 6 9 0 6 60 14 25 0\\n62 6 8 0 44 20 59 19 35 61 0\\n63 8 0 51 42 62 0\\n64 -1 0 54 63 0\\n66 10 -9 0 4 64 0\\n68 5 -9 0 12 63 0\\n69 4 -10 -9 0 13 63 0\\n74 -10 7 0 30 63 0\\n78 6 0 10 49 74 66 61 68 69 0\\n80 -7 0 42 78 0\\n81 0 51 80 78 0\\n",
}


def test_cnf_sat_search_problem():
    problem = CNFSatSearchProblem.from_csv_fields(CSV_FIELDS)
    assert problem.to_csv_fields() == CSV_FIELDS
